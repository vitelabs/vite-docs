(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{723:function(e,t,a){"use strict";a.r(t);var o=a(1),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"contract-debugging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contract-debugging"}},[e._v("#")]),e._v(" Contract Debugging")]),e._v(" "),a("h2",{attrs:{id:"debugging-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugging-environment"}},[e._v("#")]),e._v(" Debugging Environment")]),e._v(" "),a("p",[e._v("In order to debug smart contract, you need setup a local node and do debugging through your node's RPC interface.")]),e._v(" "),a("p",[e._v("Vite provides 2 debugging environments: development and testing.")]),e._v(" "),a("p",[a("strong",[e._v("Development Environment")])]),e._v(" "),a("ul",[a("li",[e._v("Account balance is NOT verified before sending transaction.")]),e._v(" "),a("li",[e._v("Each transaction can utilize maximum 47.62"),a("code",[e._v("UT")]),e._v(" quota with no staking.")])]),e._v(" "),a("p",[a("strong",[e._v("Testing Environment")])]),e._v(" "),a("ul",[a("li",[e._v("Quota and balance are verified normally. Pay attention to your balance and quota during debugging.")])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Tips")]),e._v(" "),a("p",[e._v("It is possible to debug your smart contract in Microsoft Visual Studio Code (aka VS Code) in development environment.")])]),e._v(" "),a("h2",{attrs:{id:"debug-contracts-in-vs-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debug-contracts-in-vs-code"}},[e._v("#")]),e._v(" Debug Contracts in VS Code")]),e._v(" "),a("p",[e._v("Soliditypp extension for VS Code supports debugging "),a("code",[e._v("solidity++")]),e._v(" smart contract in local development environment.")]),e._v(" "),a("p",[e._v("Following features are supported:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("solidity++")]),e._v(" syntax highlighting")]),e._v(" "),a("li",[a("code",[e._v("solidity++")]),e._v(" code auto completion")]),e._v(" "),a("li",[e._v("Auto compilation when saving "),a("code",[e._v(".solpp")]),e._v(" file")]),e._v(" "),a("li",[e._v("Compilation error highlighting")]),e._v(" "),a("li",[e._v("Detailed error message displaying when mouse over")]),e._v(" "),a("li",[e._v("One-click smart contract deployment and debugging")]),e._v(" "),a("li",[e._v("Support for multiple smart contract interaction")]),e._v(" "),a("li",[e._v("Deployment/debugging result displaying")]),e._v(" "),a("li",[e._v("Support for offchain queries")]),e._v(" "),a("li",[e._v("Example "),a("code",[e._v("solidity++")]),e._v(" code")])]),e._v(" "),a("h3",{attrs:{id:"install-soliditypp-extension"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-soliditypp-extension"}},[e._v("#")]),e._v(" Install Soliditypp Extension")]),e._v(" "),a("p",[e._v('Search for "soliditypp" in VS Code and install.')]),e._v(" "),a("h3",{attrs:{id:"generate-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generate-examples"}},[e._v("#")]),e._v(" Generate examples")]),e._v(" "),a("p",[e._v("Open VS Code workbench, press "),a("code",[e._v("⇧⌘P")]),e._v("(or "),a("code",[e._v("F1")]),e._v(") in Mac(or "),a("code",[e._v("Ctrl+Shift+P")]),e._v(" in Windows) to bring Command Palette, and then execute command "),a("code",[e._v("soliditypp: Generate Examples")]),e._v(". This will generate example contracts in the working directory.")]),e._v(" "),a("h3",{attrs:{id:"write-smart-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#write-smart-contract"}},[e._v("#")]),e._v(" Write Smart Contract")]),e._v(" "),a("p",[e._v("Write your contract in a new "),a("code",[e._v(".solpp")]),e._v(" file and then save it by pressing "),a("code",[e._v("⌘S")]),e._v(" in Mac(or "),a("code",[e._v("Ctrl+S")]),e._v(" in Windows). Your source file will be automatically compiled each time it is saved.\nLines with compilation error in the code will be marked with red underscore. Detailed error message will be displayed when you mouse over.")]),e._v(" "),a("p",[e._v("VS Code will recognize "),a("code",[e._v(".solpp")]),e._v(" file as "),a("code",[e._v("solidity++")]),e._v(" source by default.")]),e._v(" "),a("h3",{attrs:{id:"deploy-debug-smart-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-debug-smart-contract"}},[e._v("#")]),e._v(" Deploy/Debug Smart Contract")]),e._v(" "),a("p",[e._v("In Debug panel, start debugging and choose "),a("code",[e._v("Soliditypp")]),e._v(" environment. This will launch a local "),a("code",[e._v("gvite")]),e._v(" node and all following deployment and debugging steps will take place on this node.\nPlease note that all data will be cleared from the node after debugging is complete.")]),e._v(" "),a("h2",{attrs:{id:"debug-contracts-in-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debug-contracts-in-cli"}},[e._v("#")]),e._v(" Debug Contracts in CLI")]),e._v(" "),a("h3",{attrs:{id:"create-a-boilerplate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-boilerplate"}},[e._v("#")]),e._v(" Create A Boilerplate")]),e._v(" "),a("p",[e._v("Clone the examples project from: https://github.com/vitelabs/soliditypp-examples as a boilerplate.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Z2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS92aXRlbGFicy9zb2xpZGl0eXBwLWV4YW1wbGVzLmdpdAo="}}),e._v(" "),a("h3",{attrs:{id:"quick-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quick-start"}},[e._v("#")]),e._v(" Quick Start")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"bnBtIGluc3RhbGwKbnBtIHRlc3QK"}}),e._v(" "),a("h3",{attrs:{id:"test-on-release-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-on-release-environment"}},[e._v("#")]),e._v(" Test on Release Environment")]),e._v(" "),a("p",[e._v("Contracts are compiled by the release version of solppc and deployed on local network running the release version of gvite.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"bnBtIHJ1biB0ZXN0LW9uLXJlbGVhc2UK"}}),e._v(" "),a("h3",{attrs:{id:"test-on-beta-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-on-beta-environment"}},[e._v("#")]),e._v(" Test on Beta Environment")]),e._v(" "),a("p",[e._v("Contracts are compiled by the beta version of solppc and deployed on local network running the beta version of gvite.")]),e._v(" "),a("p",[e._v("Beta version means gvite is deployed on testnet but not deployed on mainnet yet.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"bnBtIHJ1biB0ZXN0LW9uLWJldGEK"}}),e._v(" "),a("h3",{attrs:{id:"test-on-nightly-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-on-nightly-environment"}},[e._v("#")]),e._v(" Test on Nightly Environment")]),e._v(" "),a("p",[e._v("Contracts are compiled by the nightly version of solppc and deployed on local network running the nightly version of gvite.")]),e._v(" "),a("p",[e._v("Nightly version is the developing build of solppc and gvite.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"bnBtIHJ1biB0ZXN0LW9uLW5pZ2h0bHkK"}}),e._v(" "),a("h3",{attrs:{id:"create-your-own-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-your-own-contract"}},[e._v("#")]),e._v(" Create Your Own Contract")]),e._v(" "),a("p",[e._v("Create a "),a("code",[e._v(".solpp")]),e._v(" file in "),a("code",[e._v("contracts")]),e._v(" directory and write contract code in it.")]),e._v(" "),a("p",[e._v("Create a "),a("code",[e._v(".spec.ts")]),e._v(" file in "),a("code",[e._v("test")]),e._v(" directory and write tests in it.")]),e._v(" "),a("h3",{attrs:{id:"compile-contracts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compile-contracts"}},[e._v("#")]),e._v(" Compile Contracts")]),e._v(" "),a("p",[e._v("Use solppc-js to compile contracts: https://github.com/vitelabs/solppc-js.")])],1)}),[],!1,null,null,null);t.default=n.exports}}]);