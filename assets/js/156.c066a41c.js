(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{744:function(t,e,r){"use strict";r.r(e);var a=r(1),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"smart-contract-development"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#smart-contract-development"}},[t._v("#")]),t._v(" Smart Contract Development")]),t._v(" "),r("p",[t._v("Developing usable smart contracts using Solidity++ can roughly be split into two tasks, writing the contract and developing an interface.")]),t._v(" "),r("h3",{attrs:{id:"_1-writing-the-smart-contract"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-writing-the-smart-contract"}},[t._v("#")]),t._v(" 1. Writing the Smart Contract.")]),t._v(" "),r("p",[t._v("Solidity++ is used to write the contract itself, which is then deployed onto the blockchain. Once a contract is deployed, anyone can interact with it, making the contract essentially a decentralized and publicly accessible application backend.")]),t._v(" "),r("p",[t._v("This can be done entirely within VSCode and the Solidity++ extension, following steps from the "),r("RouterLink",{attrs:{to:"/tutorial/sppguide/basics/debugger/"}},[t._v("debugger guide")]),t._v(" and examples from "),r("RouterLink",{attrs:{to:"/tutorial/sppguide/basics/simple-contracts/"}},[t._v("Simple Contracts.")])],1),t._v(" "),r("h3",{attrs:{id:"_2-developing-the-interface"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-developing-the-interface"}},[t._v("#")]),t._v(" 2. Developing the interface.")]),t._v(" "),r("p",[t._v("There is a much greater freedom when it comes to developing an interface to interact with a smart contract. For starters, the platform can be anything: an Android App, an iPhone app, a website, a browser plugin, a command-line interface, a shell script, etc.")]),t._v(" "),r("p",[t._v("There are several tools available to help you build interfaces:")]),t._v(" "),r("ul",[r("li",[t._v("Vite Labs has both a "),r("a",{attrs:{href:"https://docs.vite.org/vite.js/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript API"),r("OutboundLink")],1),t._v(" and a "),r("a",{attrs:{href:"https://docs.vite.org/vitej/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java API"),r("OutboundLink")],1),t._v(" for interfacing with nodes/contracts.")]),t._v(" "),r("li",[t._v("Using the "),r("RouterLink",{attrs:{to:"/tutorial/sppguide/basics/debugger/"}},[t._v("Solidity++ VSCode extension's debugger interface")]),t._v(".")],1),t._v(" "),r("li",[t._v("Vite node "),r("a",{attrs:{href:"https://docs.vite.org/go-vite/contract/debug.html#create-contract",target:"_blank",rel:"noopener noreferrer"}},[t._v("RPC calls"),r("OutboundLink")],1),t._v(" can be invoked directly.")]),t._v(" "),r("li",[t._v("Wallet authentication through "),r("a",{attrs:{href:"https://github.com/vitelabs/vite-connect-client",target:"_blank",rel:"noopener noreferrer"}},[t._v("ViteConnect"),r("OutboundLink")],1),t._v(" is also possible.")])]),t._v(" "),r("p",[t._v("We cover some simple examples of "),r("RouterLink",{attrs:{to:"/tutorial/sppguide/tutorials/hello-world/"}},[t._v("interacting with contracts")]),t._v(" to get you started, but you'll want to supplement this guide with other resources for developing for your target platform.")],1)])}),[],!1,null,null,null);e.default=n.exports}}]);