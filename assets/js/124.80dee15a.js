(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{726:function(e,t,n){"use strict";n.r(t);var s=n(1),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"event-subscription"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-subscription"}},[e._v("#")]),e._v(" Event Subscription")]),e._v(" "),n("h2",{attrs:{id:"what-is-event"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#what-is-event"}},[e._v("#")]),e._v(" What is Event")]),e._v(" "),n("p",[e._v("In Vite, events are notifications triggered by virtual machine to indicate state change and will be pushed to front-end program such as dApp for further processing.\nA "),n("code",[e._v("VmLog")]),e._v(" will be created in the smart contract's response block when event is triggered.")]),e._v(" "),n("p",[e._v("Taking the following contract as example, when method "),n("code",[e._v("TransferWithEvent")]),e._v(" is called, the contract transfers the token received to specified address and then triggers a "),n("code",[e._v("transferEvent")]),e._v(" event.")]),e._v(" "),n("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"cHJhZ21hIHNvbGlkaXR5cHAgXjAuNC4xOwpjb250cmFjdCBUcmFuc2ZlckNvbnRyYWN0IHsKICAgZXZlbnQgdHJhbnNmZXJFdmVudChhZGRyZXNzIGluZGV4ZWQgYWRkciwgdWludDI1NiB2YWx1ZSwgdG9rZW5JZCB0b2tlbmlkKTsKICAgCiAgIG9uTWVzc2FnZSBUcmFuc2ZlcldpdGhFdmVudChhZGRyZXNzIGFkZHIpIHBheWFibGUgewogICAgICBhZGRyLnRyYW5zZmVyKG1zZy50b2tlbmlkICxtc2cudmFsdWUpOwogICAgICBlbWl0IHRyYW5zZmVyRXZlbnQoYWRkciwgbXNnLnZhbHVlLCBtc2cudG9rZW5pZCk7ICAgICAgCiAgIH0KfQo="}}),e._v(" "),n("p",[e._v("The "),n("code",[e._v("transferEvent")]),e._v(" event contains the following content:")]),e._v(" "),n("ul",[n("li",[e._v("The hash of contract response block in which the event was created. This information can be used to retrieve contract address, contract account block height, request transaction hash and so on.")]),e._v(" "),n("li",[e._v("Event signature as the hash of "),n("code",[e._v("transferEvent(address, uint256, uint256)")]),e._v(".")]),e._v(" "),n("li",[e._v("Indexed parameters, which are marked as "),n("code",[e._v("indexed")]),e._v(" in event definition. Up to 4 indexed parameters can be defined in an event. Event signature and indexed parameters are stored in "),n("code",[e._v("topics")]),e._v(" field of "),n("code",[e._v("VmLog")]),e._v(", where "),n("code",[e._v("topics[0]")]),e._v(" is occupied by event signature.")]),e._v(" "),n("li",[e._v("Non-indexed parameters having no "),n("code",[e._v("indexed")]),e._v(" marked. Non-indexed parameters are stored in "),n("code",[e._v("data")]),e._v(" field of "),n("code",[e._v("VmLog")]),e._v(".")])]),e._v(" "),n("p",[e._v("Below is an example of event logged when sending 1 VITE to "),n("code",[e._v("vite_9990375e0eaf10426d1d1f9b528b6dee158fd3adb0e1b9de70")])]),e._v(" "),n("tm-code-block",{staticClass:"codeblock",attrs:{language:"json",base64:"ewogICZxdW90O2FjY291bnRCbG9ja0hhc2gmcXVvdDs6JnF1b3Q7MGVkY2JiYmJiZjBkNjhlNTcyMTE4N2MxODY2MDI5ZTJmNTQ0ZTAwZjJmNDgzNThhOWRmNWNhMThmNWQxZDVhMiZxdW90OywKICAmcXVvdDtsb2cmcXVvdDs6IHsKICAgICZxdW90O3RvcGljcyZxdW90OzogWwogICAgICAgICZxdW90O2Y2MzJjNjMxZjFjZjU4YTEwMWIwOWY4ZmUwMjYyZDdjMDRmMDRlOWI3N2YyNTViZDJmODZmZWRkMWI2YWY1NmQmcXVvdDssCiAgICAgICAgJnF1b3Q7MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOTk5MDM3NWUwZWFmMTA0MjZkMWQxZjliNTI4YjZkZWUxNThmZDNhZCZxdW90OwogICAgXSwKICAgICZxdW90O2RhdGEmcXVvdDs6ICZxdW90OzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBERTBCNkIzQTc2NDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNTY0OTU0NDUyMDU0NGY0YjQ1NGU2ZTQwJnF1b3Q7CiAgfQp9Cg=="}}),e._v(" "),n("h2",{attrs:{id:"what-is-subscription"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#what-is-subscription"}},[e._v("#")]),e._v(" What is Subscription")]),e._v(" "),n("p",[e._v("If a certain event is subscribed to, the subscriber will be notified when this certain event occurs.\nFor example, if you subscribe to "),n("code",[e._v("transferEvent")]),e._v(" of "),n("code",[e._v("TransferContract")]),e._v(", you will receive a notification when "),n("code",[e._v("TransferWithEvent")]),e._v(" method is called.")]),e._v(" "),n("p",[e._v("Event subscription can be used to listen to new transactions that occur on blockchain.\nIt's only allowed to listen to events that have not occurred yet. Historical events cannot be monitored but can only be fetched through query API.")]),e._v(" "),n("p",[e._v("The following parameters need to be specified when subscribing to an event:")]),e._v(" "),n("ul",[n("li",[e._v("Contract address. Required.")]),e._v(" "),n("li",[e._v("Contract account height range. Optional. By this parameter, it's possible to subscribe to events happening within a certain height range.")]),e._v(" "),n("li",[e._v("Event signature or indexed parameter. Optional. For example, you can subscribe to events that transfer to certain accounts.")])]),e._v(" "),n("h2",{attrs:{id:"two-modes-of-event-subscription"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#two-modes-of-event-subscription"}},[e._v("#")]),e._v(" Two Modes of Event Subscription")]),e._v(" "),n("p",[e._v('In the following part we regard "server" is a full node generating event, and "client" subscribes to the event.')]),e._v(" "),n("h3",{attrs:{id:"callback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#callback"}},[e._v("#")]),e._v(" Callback")]),e._v(" "),n("p",[e._v("In callback mode, a WebSocket connection is established between client and server, and then client subscribes to event that occurs at server side.\nWhen new event is triggered, it will be pushed to client automatically. Subscription will end once the connection is broken.")]),e._v(" "),n("h3",{attrs:{id:"polling"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#polling"}},[e._v("#")]),e._v(" Polling")]),e._v(" "),n("p",[e._v("In polling mode, client firstly subscribes to certain event, and then periodically requests for new event from server.\nNew events that were triggered since last request will be returned, otherwise server returns null.")]),e._v(" "),n("p",[e._v("If client does not send request for more than 5 minutes, subscription will close. Client must re-subscribe to the event in this situation.")]),e._v(" "),n("h2",{attrs:{id:"usage-example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#usage-example"}},[e._v("#")]),e._v(" Usage Example")]),e._v(" "),n("p",[e._v("See "),n("RouterLink",{attrs:{to:"/api/rpc/subscribe_v2.html#Usage-Example"}},[e._v("Usage Example")])],1),e._v(" "),n("h2",{attrs:{id:"other-subscriptions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#other-subscriptions"}},[e._v("#")]),e._v(" Other Subscriptions")]),e._v(" "),n("p",[e._v("In addition to events generated by smart contracts, it is also possible to subscribe to new transactions on all accounts, new transactions on specified account, un-received transactions on specified account and new snapshot blocks.")]),e._v(" "),n("h2",{attrs:{id:"subscriptions-in-future"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#subscriptions-in-future"}},[e._v("#")]),e._v(" Subscriptions in Future")]),e._v(" "),n("p",[e._v("Event will be triggered")]),e._v(" "),n("ul",[n("li",[e._v("When transaction is confirmed")]),e._v(" "),n("li",[e._v("When event is confirmed")]),e._v(" "),n("li",[e._v("When account balance changes")])])],1)}),[],!1,null,null,null);t.default=a.exports}}]);