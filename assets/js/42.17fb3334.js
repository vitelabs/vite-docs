(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{553:function(e,t,a){e.exports=a.p+"assets/img/solpp-0.8.0.395cbd33.png"},554:function(e,t,a){e.exports=a.p+"assets/img/solpp-0.8.1.d8f2d297.png"},742:function(e,t,a){"use strict";a.r(t);var i=a(1),o=Object(i.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"solidity-0-8"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#solidity-0-8"}},[e._v("#")]),e._v(" Solidity++ 0.8")]),e._v(" "),i("p",[e._v("The design goal of Solidity++ 0.8 is to be compatible with the syntax of Solidity as much as possible, so that developers donâ€™t have to learn different languages to implement the same thing.")]),e._v(" "),i("p",[e._v("We assume that you are already familiar with Solidity, if not, please read "),i("a",{attrs:{href:"https://docs.soliditylang.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Solidity documentation"),i("OutboundLink")],1),e._v(" before starting.")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("Notice")]),e._v(" "),i("p",[e._v("The Solidity++ 0.8 is still under development, you can try a nightly build version for development or test, but do "),i("strong",[e._v("NOT")]),e._v(" deploy contracts to the mainnet until a stable version is released. Please report an issue "),i("a",{attrs:{href:"https://github.com/vitelabs/soliditypp/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),i("OutboundLink")],1),e._v(" if you find a bug.")])]),e._v(" "),i("h2",{attrs:{id:"get-started"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#get-started"}},[e._v("#")]),e._v(" Get Started")]),e._v(" "),i("p",[e._v("Let us begin with a basic example that sets the value of a variable and exposes it for frontend to access.")]),e._v(" "),i("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgJmd0Oz0wLjguMCAmbHQ7MC45LjA7Cgpjb250cmFjdCBTaW1wbGVTdG9yYWdlIHsKICAgIHVpbnQgc3RvcmVkRGF0YTsKCiAgICBmdW5jdGlvbiBzZXQodWludCB4KSBleHRlcm5hbCB7CiAgICAgICAgc3RvcmVkRGF0YSA9IHg7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0KCkgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50KSB7CiAgICAgICAgcmV0dXJuIHN0b3JlZERhdGE7CiAgICB9Cn0K"}}),e._v(" "),i("p",[e._v("As above, the way of declaring a contract is syntactically similar to Solidity.")]),e._v(" "),i("p",[e._v("The first line tells you that the source code is licensed under the GPL version 3.0.")]),e._v(" "),i("p",[e._v("The next line specifies that the source code is written for Solidity++ version 0.8.0, or a newer version of the language up to, but not including version 0.9.0. This is to ensure that the contract is not compilable with a new (breaking) compiler version, where it could behave differently.\nThe only difference with Solidity is to replace "),i("code",[e._v("solidity")]),e._v(" with "),i("code",[e._v("soliditypp")]),e._v(".")]),e._v(" "),i("p",[e._v("There are two interface functions in the "),i("strong",[e._v("SimpleStorage")]),e._v(" contract. The syntax of function declarations is the same as Solidity, but the semantics are different.")]),e._v(" "),i("p",[e._v("An interface function of a Vite contract is an "),i("em",[e._v("async function")]),e._v(".")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("Notice")]),e._v(" "),i("p",[e._v("An "),i("em",[e._v("async function")]),e._v(" does not execute or return result in the request transaction but in a subsequent response transaction.")])]),e._v(" "),i("h2",{attrs:{id:"asynchronous-functions"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#asynchronous-functions"}},[e._v("#")]),e._v(" Asynchronous Functions")]),e._v(" "),i("p",[e._v("Unlike those Ethereum forks, Vite is a completely different blockchain with an asynchronous VM. All "),i("em",[e._v("message calls")]),e._v(" on Vite are fully asynchronous.")]),e._v(" "),i("p",[e._v("An asynchronous call is not blocked when waiting for the called function to return. The caller cannot get the return data immediately after the call. Instead, it gets a "),i("em",[e._v("promise")]),e._v(" of return types. (The promise syntax is not implemented in the current version.)")]),e._v(" "),i("h2",{attrs:{id:"callbacks"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#callbacks"}},[e._v("#")]),e._v(" Callbacks")]),e._v(" "),i("p",[e._v("In 0.8.0, you can declare callback functions to pass return data back to the caller as follows:")]),e._v(" "),i("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgXjAuOC4wOwoKaW50ZXJmYWNlIExpc3RlbmVyIHsKICAgIGZ1bmN0aW9uIGNhbGxiYWNrKHVpbnQgcmVzdWx0KSBleHRlcm5hbDsKfQoKY29udHJhY3QgQSB7CiAgICB1aW50IHB1YmxpYyBkYXRhOwoKICAgIGZ1bmN0aW9uIGdldCgpIGV4dGVybmFsIHsKICAgICAgICBMaXN0ZW5lciBzZW5kZXIgPSBMaXN0ZW5lcihtc2cuc2VuZGVyKTsKICAgICAgICAvLyBDYWxsIGNhbGxiYWNrIGZ1bmN0aW9uIGV4cGxpY2l0bHkgdG8gcmV0dXJuIGRhdGEgdG8gdGhlIGNhbGxlci4KICAgICAgICBzZW5kZXIuY2FsbGJhY2soZGF0YSk7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0KHVpbnQgYSkgZXh0ZXJuYWwgewogICAgICAgIGRhdGEgPSBhOwogICAgfQp9Cgpjb250cmFjdCBCIGlzIExpc3RlbmVyIHsKICAgIEEgY29udHJhY3RBOwoKICAgIGNvbnN0cnVjdG9yIChhZGRyZXNzIGFkZHIpIHsKICAgICAgICBjb250cmFjdEEgPSBBKGFkZHIpOwogICAgfQoKICAgIGZ1bmN0aW9uIGluYygpIGV4dGVybmFsIHsKICAgICAgICAvLyBDYWxsIENvbnRyYWN0IEEgYXN5bmNocm9ub3VzbHkuCiAgICAgICAgY29udHJhY3RBLmdldCgpOwogICAgICAgIC8vIENvbnRyYWN0IEEgd2lsbCBOT1QgcmV0dXJuIGRhdGEgaW1tZWRpYXRlbHkuCiAgICB9CgogICAgLy8gVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGZvciByZWNlaXZpbmcgcmV0dXJuIGRhdGEgb2YgQ29udHJhY3QgQSwgRE8gTk9UIGNhbGwgaXQgZXhwbGljaXRseS4KICAgIGZ1bmN0aW9uIGNhbGxiYWNrKHVpbnQgcmVzdWx0KSBleHRlcm5hbCBvdmVycmlkZSB7CiAgICAgICAgLy8gQ29udHJhY3QgQSB3aWxsIHJldHVybiBkYXRhIGJ5IGludm9raW5nIHRoaXMgY2FsbGJhY2sgZnVuY3Rpb24uCiAgICAgICAgY29udHJhY3RBLnNldChyZXN1bHQgKyAxKTsKICAgIH0KfQo="}}),e._v(" "),i("p",[e._v("After A and B are deployed, a client can invoke "),i("code",[e._v("B.inc()")]),e._v(" function to increment "),i("code",[e._v("A.data")]),e._v(".")]),e._v(" "),i("p",[e._v("The execution is NOT in a single transaction, instead, there are multiple transactions initiated and propagated on Vite blockchain.")]),e._v(" "),i("p",[i("img",{attrs:{src:a(553),alt:"example-0.8.0"}})]),e._v(" "),i("ul",[i("li",[e._v("When the client invokes "),i("code",[e._v("B.inc()")]),e._v(", a request transaction "),i("em",[e._v("S1(C->B)")]),e._v(" (from the client to B) is initiated.")]),e._v(" "),i("li",[e._v("Vite is listening all open request transactions to the address of contract B. Once "),i("em",[e._v("S1")]),e._v(" is discovered, Vite VM is activated and the code of "),i("code",[e._v("B.inc()")]),e._v(" is executed. A response transaction "),i("em",[e._v("R1(S1)")]),e._v(" (linked to "),i("em",[e._v("S1")]),e._v(") will be initiated after the execution.")]),e._v(" "),i("li",[e._v("When the "),i("code",[e._v("contractA.get()")]),e._v(" statement is executed, a new request transaction "),i("em",[e._v("S2(B->A)")]),e._v(" (from B to A) is triggered and merged to "),i("em",[e._v("R1")]),e._v(". ("),i("a",{attrs:{href:"https://docs.vite.org/vite-docs/vep/vep-7.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("VEP-7: Merge In-Contract Request Calls into Original Response as one Transaction"),i("OutboundLink")],1),e._v(")")]),e._v(" "),i("li",[e._v("When "),i("em",[e._v("S2")]),e._v(" is accepted by contract A, the code of "),i("code",[e._v("A.get()")]),e._v(" is executed and a response transaction "),i("em",[e._v("R2(S2)")]),e._v(" (linked to "),i("em",[e._v("S2")]),e._v(") will be initiated after the execution.")]),e._v(" "),i("li",[e._v("When the "),i("code",[e._v("sender.callback(data)")]),e._v(" statement is executed, a new request transaction "),i("em",[e._v("S3(A->B)")]),e._v(" (from A to B) is triggered to send the result back to B. ("),i("em",[e._v("S3")]),e._v(" will be merged to "),i("em",[e._v("R2")]),e._v(").")]),e._v(" "),i("li",[e._v("When "),i("em",[e._v("S3")]),e._v(" is accepted by contract B, the code of "),i("code",[e._v("B.callback()")]),e._v(" is executed. A can get the latest value of "),i("code",[e._v("B.data")]),e._v(" from the parameter "),i("code",[e._v("result")]),e._v(" of the function "),i("code",[e._v("callback")]),e._v(". After the execution, a response transaction "),i("em",[e._v("R3(S3)")]),e._v(" (linked to "),i("em",[e._v("S3")]),e._v(") will be initiated.")]),e._v(" "),i("li",[e._v("When the "),i("code",[e._v("contractA.set(result + 1)")]),e._v(" statement is executed, a new request transaction "),i("em",[e._v("S4(B->A)")]),e._v(" (from B to A) is triggered. The data field of "),i("em",[e._v("S4")]),e._v(" is composed of a 4-bytes function selector of "),i("code",[e._v("A.set()")]),e._v(" and an argument with value of "),i("code",[e._v("result + 1")]),e._v(" which is encoded in ABI format.  ("),i("em",[e._v("S4")]),e._v(" will be merged to "),i("em",[e._v("R3")]),e._v(").")]),e._v(" "),i("li",[e._v("When "),i("em",[e._v("S4")]),e._v(" is accepted by contract A, the code of "),i("code",[e._v("A.set()")]),e._v(" is executed. The value of storage variable "),i("code",[e._v("data")]),e._v(" is set to the new value from the calldata of "),i("em",[e._v("S4")]),e._v(". After the execution, a response transaction "),i("em",[e._v("R4(S4)")]),e._v(" (linked to "),i("em",[e._v("S4")]),e._v(") will be initiated.")])]),e._v(" "),i("h2",{attrs:{id:"await-expressions"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#await-expressions"}},[e._v("#")]),e._v(" Await Expressions")]),e._v(" "),i("p",[e._v("In 0.8.1, "),i("code",[e._v("await")]),e._v(" operator is introduced. The "),i("code",[e._v("await")]),e._v(" is used to wait for an asynchronous function to return.")]),e._v(" "),i("p",[e._v("The following code shows the usage of "),i("code",[e._v("await")]),e._v(":")]),e._v(" "),i("tm-code-block",{staticClass:"codeblock",attrs:{language:"javascript",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0zLjAKcHJhZ21hIHNvbGlkaXR5cHAgXjAuOC4xOwoKY29udHJhY3QgQSB7CiAgICB1aW50IHB1YmxpYyBkYXRhOwoKICAgIGZ1bmN0aW9uIHNldCh1aW50IGEpIGV4dGVybmFsIHsKICAgICAgICBkYXRhID0gYTsKICAgIH0KfQoKY29udHJhY3QgQiB7CiAgICBBIGNvbnRyYWN0QTsKCiAgICBjb25zdHJ1Y3RvciAoYWRkcmVzcyBhZGRyKSB7CiAgICAgICAgY29udHJhY3RBID0gQShhZGRyKTsKICAgIH0KCiAgICBmdW5jdGlvbiBpbmMoKSBleHRlcm5hbCB7CiAgICAgICAgdWludCByZXN1bHQgPSBhd2FpdCBjb250cmFjdEEuZGF0YSgpOwogICAgICAgIGNvbnRyYWN0QS5zZXQocmVzdWx0ICsgMSk7CiAgICB9Cn0K"}}),e._v(" "),i("p",[e._v("It's not required to declare callbacks explicitly in 0.8.1, the solppc compiler will generate callbacks for each await expression under the hood.")]),e._v(" "),i("p",[i("img",{attrs:{src:a(554),alt:"example-0.8.1"}})]),e._v(" "),i("ul",[i("li",[e._v("When the client invokes "),i("code",[e._v("B.inc()")]),e._v(", a request transaction "),i("em",[e._v("S1(C->B)")]),e._v(" is initiated.")]),e._v(" "),i("li",[e._v("Once "),i("em",[e._v("S1")]),e._v(" is dicovered and accepted, the code of "),i("code",[e._v("B.inc()")]),e._v(" is executed.")]),e._v(" "),i("li",[e._v("When the "),i("code",[e._v("await contractA.data()")]),e._v(" expression is executed, a new request transaction "),i("em",[e._v("S2(B->A)")]),e._v(" is triggered. The VM will halt immediately after executing the "),i("code",[e._v("await")]),e._v(" expression and a response transaction "),i("em",[e._v("R1(S1)")]),e._v(" will be initiated. ("),i("em",[e._v("S2")]),e._v(" and "),i("em",[e._v("R1")]),e._v(" are melt into one transaction.)")]),e._v(" "),i("li",[e._v("When "),i("em",[e._v("S2")]),e._v(" is accepted by contract A, the code of "),i("code",[e._v("A.data()")]),e._v(" is executed. This getter function is generated automatically by the compiler.\nThere is no explicit callback invocation in "),i("code",[e._v("A.data()")]),e._v(". Vite VM can infer that the call is synchronous and need a callback. It will initiate a new request transaction "),i("em",[e._v("S3(A->B)")]),e._v(" when the function returns. In addition, a response transaction "),i("em",[e._v("R2(S2)")]),e._v(" will be also initiated. ("),i("em",[e._v("S3")]),e._v(" and "),i("em",[e._v("R2")]),e._v(" are melt into one transaction.)")]),e._v(" "),i("li",[e._v("When "),i("em",[e._v("S3")]),e._v(" is accepted by contract B, a compiler-generated callback is executed. Vite VM will unpack the arguments from the "),i("em",[e._v("calldata")]),e._v(" of "),i("em",[e._v("S3")]),e._v(", then jump into the code after the await expression. At this point, the latest value of "),i("code",[e._v("A.data")]),e._v(" is ready for the following assignment statement, and the rest of the code will be executed subsequently. When the "),i("code",[e._v("contractA.set(result + 1)")]),e._v(" statement is executed, a new request transaction "),i("em",[e._v("S4(B->A)")]),e._v(" is triggered. The data field of "),i("em",[e._v("S4")]),e._v(" is composed of a 4-bytes function selector of "),i("code",[e._v("A.set()")]),e._v(" and an argument with value of "),i("code",[e._v("result + 1")]),e._v(" which is encoded in ABI format. Then the "),i("code",[e._v("B.inc()")]),e._v(" function ends, a response transaction "),i("em",[e._v("R3(S3)")]),e._v(" will be initiated. ("),i("em",[e._v("S4")]),e._v(" and "),i("em",[e._v("R3")]),e._v(" are melt into one transaction.)")]),e._v(" "),i("li",[e._v("When "),i("em",[e._v("S4")]),e._v(" is accepted by contract A, the code of "),i("code",[e._v("A.set()")]),e._v(" is executed. The value of storage variable "),i("code",[e._v("data")]),e._v(" is set to the new value from the calldata of "),i("em",[e._v("S4")]),e._v(". After the execution, a response transaction "),i("em",[e._v("R4(S4)")]),e._v(" will be initiated.")])]),e._v(" "),i("p",[e._v("According to the above description, the code in 0.8.1 has a different syntax but the same semantics as the code in 0.8.0. The compiler and VM do a lot of mechanical work for the developer under the hood.")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("Notice")]),e._v(" "),i("p",[e._v("The "),i("code",[e._v("await")]),e._v(" operator is only available after a Vite mainnet upgrade to enable the required instructions.")])]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("Important")]),e._v(" "),i("p",[e._v("A function in Solidity++ not equivalents to a tranction on Vite, so functions are not guaranteed to have ACID semantics. The example above demonstrates a potential "),i("em",[e._v("Isolation Failure")]),e._v(" issue which is known as "),i("em",[e._v("Lost Update Problem")]),e._v(".\nConsider the situation that "),i("code",[e._v("B.inc()")]),e._v(" is invoked by two simultaneous requests, the corresponding responses both read "),i("code",[e._v("A.data")]),e._v(" and then update it, the effects of the first update will be overwritten by the second update. In other words, after two function calls, "),i("code",[e._v("A.data")]),e._v(" may have only increased by 1.")])]),e._v(" "),i("h2",{attrs:{id:"contribution"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#contribution"}},[e._v("#")]),e._v(" Contribution")]),e._v(" "),i("p",[e._v("The Solidity++ is open sourced "),i("a",{attrs:{href:"https://github.com/vitelabs/soliditypp",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),i("OutboundLink")],1),e._v(".")]),e._v(" "),i("p",[e._v("We welcome contributions from anyone interested, including reporting issues, fixing bus, commit new features and improving or translating the documentations.")])],1)}),[],!1,null,null,null);t.default=o.exports}}]);